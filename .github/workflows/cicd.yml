name: Java+SpringBoot CI/CD with Gradle

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: mini-project-team4
  AWS_CODE_DEPLOY_APPLICATION: mini-project
  AWS_CODE_DEPLOY_GROUP: mini-project

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: copy application.yml
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml
        shell: bash

      - name: copy serviceAccountKey.json
        run: echo "${{ secrets.FIREBASE_ACCOUNT_KEY }}" > ./src/main/resources/serviceAccountKey.json
        shell: bash

      - name: Add permission
        run: chmod +x gradlew

      - name: Build with Gradle
#        run: ./gradlew clean --stacktrace --info build -x test
        run: ./gradlew clean build -x test
        shell: bash

      - name: Make Directory
        run: mkdir -p deploy

      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./mini-project.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: AWS S3 Upload
        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/mini-project.zip --source .

      - name: AWS EC2 Deploy
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=mini-project.zip,bundleType=zip